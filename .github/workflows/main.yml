# This is a basic workflow to help you get started with Actions

name: Lint, Test and Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # setup the repository in the runner
      - name: Setup Yarn And Install dependencies # setup Yarn in the runner
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install # will run `yarn install` command
      - name: Lint Run
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: run lint # will run `yarn run lint` command
      - name: Unit Test Run
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: run test:unit # will run `yarn run test:unit` command
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: yarn run serve
          wait-on: http://localhost:8080/
          config_file: cypress.json
          spec: "tests/e2e/**/*"
        env:
          CYPRESS_baseUrl: http://localhost:8080/
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: tests/e2e/videos/*

  build:
     needs: [lint-and-test]
     runs-on: ubuntu-latest
     steps:
      - uses: actions/checkout@v2 # setup the repository in the runner
      - name: Setup Yarn And Install dependencies # setup Yarn in the runner
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install # will run `yarn install` command
      - name: Build Project # setup Yarn in the runner
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install # will run `yarn install` command
      - name: Install dependencies and Build Project
        run: run build --if-present --production # build the project
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-without-markdown
          path: |
            dist
            !dist/**/*.md
